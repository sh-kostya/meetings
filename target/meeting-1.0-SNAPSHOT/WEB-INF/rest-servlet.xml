<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="testgroup.meeting" />
    <mvc:annotation-driven />
    <jpa:repositories base-package="testgroup.meeting.repository" entity-manager-factory-ref="emf"/>

    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="testgroup.meeting.model" />
        <property name="dataSource" ref="dataSource" />

        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</prop>
            </props>
        </property>

        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
        </property>
    </bean>

    <context:property-placeholder location="classpath:gmail.com.properties"
                                  ignore-unresolvable="true" />
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtps.auth">${mail.smtps.auth}</prop>
            </props>
        </property>
        <property name="host" value="${mail.host}" />
        <property name="port" value="${mail.port}" />
        <property name="username" value="${mail.username}" />
        <property name="password" value="${mail.password}" />
        <property name="protocol" value="${mail.protocol}" />
    </bean>


    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}" />
        <property name="subject" value="Mail subject" />
    </bean>

    <context:property-placeholder location="classpath:db.properties"
                                  ignore-unresolvable="true" />
    <bean class="org.springframework.jdbc.datasource.SimpleDriverDataSource" id="dataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name = "username" value="${db.username}" />
        <property name = "password" value="${db.password}" />
        <property name="url" value="${db.url}"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean class="org.springframework.orm.jpa.JpaTransactionManager"  id="transactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
</beans>